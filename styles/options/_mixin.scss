@mixin clearfix() {
  &::after {
    display: block;
    content: "";
    clear: both;
  }
}

@mixin element($element) {
  &__#{$element} {
    @content;
  }
}

/// Block Modifier
/// @access public
/// @param {String} $modifier - Modifier's name
@mixin modifier($modifier) {
  &--#{$modifier} {
    @content;
  }
}

/// @alias element
@mixin e($element) {
  @include element($element) {
    @content;
  }
}

/// @alias modifier
@mixin m($modifier) {
  @include modifier($modifier) {
    @content;
  }
}

@mixin size($w, $h: $w) {
  width: $w;
  height: $h;
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin svg-styles {
  svg-icon {
    svg {
      @content;
    }
  }
}
